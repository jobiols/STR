-
    I create a product
-
    !record {model: product.product, id: curso_product_1}
        tot_hs_lecture: 15
        hs_lecture: 5
        classes_per_week: 1
        no_quotes: 10
        default_code: SPR
        list_price: 800
        type: service
        name: Curso de maquillaje Social Profesional rafañuso
        agenda: Titulo Cuerpo del texto **negrita** Año 2016
        description: este es un curso **de prueba** para el test en UTF8 ajá tomá ñoño
-
    I add lecture template 1 for this product
-
    !record {model: curso.lecture_template, id: curso.lecture_template_1}
        product_id: curso_product_1
        text: clase uno ñ
        seq: 1
-
    I add lecture template 2 for this product
-
    !record {model: curso.lecture_template, id: curso.lecture_template_1}
        product_id: curso_product_1
        text: clase dos ñ
        seq: 2
-
    I add lecture template 3 for this product
-
    !record {model: curso.lecture_template, id: curso.lecture_template_1}
        product_id: curso_product_1
        text: clase tres ñ
        seq: 3
-
    I create a curso based on this product
-
    !record {model: curso.curso, id: curso_curso_1}:
        product: curso_product_1
-
  I check that state instance and name
-
  !assert {model: curso.curso, id: curso_curso_1, severity: error, string: State should be draft.}:
    - state == 'draft'
    - instance == 1
    - name == u'[SPR/01] ? ?/?/? (00:00 00:00) - Curso de maquillaje Social Profesional rafañuso'
-
  Then I create another curso based on this product
-
  !record {model: curso.curso, id: curso_curso_2}:
    product: curso_product_1
    date_begin: '2016-01-11'
-
  I check instance and name
-
  !assert {model: curso.curso, id: curso_curso_2, severity: error, string: Instance does not increment correctly.}:
    - instance == 2
    - name == u'[SPR/02] Lun. 11/01/16 (00:00 00:00) - Curso de maquillaje Social Profesional rafañuso'
-
  I create a diary with tree days adding it to curso_curso_2
-
  !record {model: curso.diary, id: curso_diary_1}:
    curso_id: curso_curso_2
    weekday: '1'
    seq: 1
    schedule: curso_schedule_1
-
  !record {model: curso.diary, id: curso_diary_2}:
    curso_id: curso_curso_2
    weekday: '2'
    seq: 2
    schedule: curso_schedule_1
-
  !record {model: curso.diary, id: curso_diary_3}:
    curso_id: curso_curso_2
    weekday: '3'
    seq: 3
    schedule: curso_schedule_1
-
  I check curso name
-
  !assert {model: curso.curso, id: curso_curso_2, severity: error, string: name is ill formed.}:
    - name == u'[SPR/02] Lun. 11/01/16 (12:00 15:00) - Curso de maquillaje Social Profesional rafañuso'
-
  I generate attendance sheet for the curso
-
   !python {model: curso.curso}: |
     self.button_generate_doc_curso(cr, uid, [ref("curso_curso_2")],context=context)
-
  I generate wordpress (html) data for curso
-
   !python {model: product.product}: |
     self.button_generate_doc(cr, uid, [ref("curso_product_1")],context=context)
-
    I Generate lectures automatically
-
   !python {model: curso.curso}: |
     self.button_generate_lectures(cr, uid, [ref("curso_product_1")],context=context)
-
-
-
-
-

  I add a lecture
-
  !record {model: curso.lecture, id: curso_lecture_1}:
    date: '2016-01-11'
    desc: Primera clase del curso
    curso_id: curso_curso_2
    schedule_id: curso_schedule_1
-
  I Register a student in the course
-
  !record {model: curso.registration, id: curso_registration_1}:
    curso_id: curso_curso_2
    partner_id: curso_student_1
-
  I make the student sign the course
-
   !python {model: curso.registration}: |
     self.button_reg_sign(cr, uid, [ref("curso_registration_1")],context=context)
-
  I Begin the course
-
   !python {model: curso.registration}: |
     self.button_reg_confirm(cr, uid, [ref("curso_registration_1")],context=context)
-
  I confirm the curso
-
   !python {model: curso.registration}: |
     self.button_reg_sign(cr, uid, [ref("curso_registration_1")],context=context)
-
   I test wordpress report data -------------------------------------
-
   !python {model: product.product}: |
     data = self._get_wordpress_data(cr, uid, [ref("curso_product_1")],'SPR',context=context)
     assert data['titulo'] == u'Cursó de maquillaje Social Profesional',                 'Failed report data'
     assert data['codigo'] == u'SPR',                                                    'Failed report data'
     assert data['description'] == u'<p>este es un cursó de prueba para el test</p>' ,   'Failed report data'